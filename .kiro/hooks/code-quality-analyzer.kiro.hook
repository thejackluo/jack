{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Listen to source code files in the repository. When changes are detected, analyze the modified code for potential improvements, including code smells, design patterns, and best practices. Generate suggestions for improving code quality while maintaining the existing functionality. Focus on readability, maintainability, and performance optimizations.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "backend/**/*.ts",
      "frontend/**/*.ts",
      "frontend/**/*.tsx",
      "ai/**/*.ts",
      "**/*.ts",
      "**/*.tsx",
      "**/*.js",
      "**/*.jsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "A source code file has been modified. Please analyze the changed code for potential improvements including:\n\n1. **Code Smells**: Identify any code smells like long methods, duplicate code, large classes, or complex conditionals\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to TypeScript/JavaScript best practices, naming conventions, and coding standards\n4. **Readability**: Suggest improvements for code clarity, comments, and documentation\n5. **Maintainability**: Identify areas that could be refactored for easier maintenance and testing\n6. **Performance**: Suggest optimizations for better performance while maintaining functionality\n7. **Security**: Check for potential security issues or vulnerabilities\n8. **Testing**: Suggest areas that need better test coverage or testing strategies\n\nPlease provide specific, actionable suggestions with code examples where helpful. Focus on improvements that enhance code quality without changing the existing functionality. Consider the ERA project's TypeScript-first approach and comprehensive testing requirements."
  }
}